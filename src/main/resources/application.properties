# DEVELOPMENT ONLY: This file is excluded from the final build

# The follow control the ganglia server being used
ganglia.port=${ganglia.port}
ganglia.server=${ganglia.server}

# Expert use only: the following can be used during development of tile renderers
# "csv-in-memory" or "hbase" depending on the storage layer
# "csv-in-memory" is for a single CSV file of lat,lng,count that
# creates a single dimension taxon cube using key "1" and is intented for offline development
# purposes
tile-server.cube.harness=${tile-server.cube.harness}

## HBase:

# Controls the HBase table being used
density-cube.cubeTable=${density-cube.table}

# The following can remain hard coded, but were designed to be configurable for future proofing
density-cube.columnFamily=dc
density-cube.writeBatchSize=1000

## CSV

# A single csv is loaded into an in-memory cube, processed to number of zooms (1-23)
tile-server.csv.location=${tile-server.csv.location}

# higher zooms on large files can be slow to start, and use more memory
tile-server.csv.numberOfZooms=${tile-server.csv.numberOfZooms}
tile-server.csv.pixelsPerCluster=${tile-server.csv.pixelsPerCluster}

#occurrence heatmap server dependencies
occurrence.search.solr.server=${occurrence.search.solr.server}
occurrence.search.solr.server.type=${occurrence.search.solr.server.type}
occurrence.search.solr.collection=${occurrence.search.solr.collection}
occurrence.search.solr.request_handler=${occurrence.search.solr.request_handler}
